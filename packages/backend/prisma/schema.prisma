// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  name      String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts         Post[]     // Posts created by this user
  likes         Like[]     // Posts liked by this user
  following     Follow[]   @relation("UserFollowing") // Users this user follows
  followers     Follow[]   @relation("UserFollowers") // Users following this user

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes     Like[]

  @@map("posts")
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  
  // Relations
  userId    String
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  // Prevent duplicate likes
  @@unique([userId, postId])
  @@map("likes")
}

model Follow {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  
  // Relations
  followerId  String
  followingId String
  follower    User   @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  following   User   @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)

  // Prevent duplicate follows
  @@unique([followerId, followingId])
  @@map("follows")
}
